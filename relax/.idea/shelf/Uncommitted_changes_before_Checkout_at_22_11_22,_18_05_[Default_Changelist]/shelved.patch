Index: src/calc2/components/raTree.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*** Copyright 2018 Johannes Kessler\n*\n* This Source Code Form is subject to the terms of the Mozilla Public\n* License, v. 2.0. If a copy of the MPL was not distributed with this\n* file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { Popover } from 'calc2/components/popover';\nimport classNames from 'classnames';\nimport { RANode, RANodeBinary, RANodeUnary } from 'db/exec/RANode';\nimport * as React from 'react';\nimport { t } from 'calc2/i18n';\n\nrequire('./raTree.scss');\n// require('./raTreeFamilyTree.scss');\n\ninterface Props {\n\troot: RANode,\n\tactiveNode: RANode,\n\t/** defaults to 0 */\n\tnumTreeLabelColors?: number,\n\tsetActiveNode?(activeNode: RANode): void,\n}\n\nexport class RaTree extends React.Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\troot,\n\t\t\tnumTreeLabelColors: numColors = 0,\n\t\t\tactiveNode,\n\t\t\tsetActiveNode,\n\t\t} = this.props;\n\n\t\tlet usedVariables = 0;\n\t\tconst usedVariableNames = new Map<string, number>();\n\n\t\tconst rec: (n: RANode) => JSX.Element = n => {\n\t\t\t// descent\n\t\t\tconst child: null | JSX.Element = (\n\t\t\t\t(n instanceof RANodeUnary || n instanceof RANodeBinary)\n\t\t\t\t\t? rec(n.getChild())\n\t\t\t\t\t: null\n\t\t\t);\n\t\t\tconst child2: null | JSX.Element = (\n\t\t\t\t(n instanceof RANodeBinary)\n\t\t\t\t\t? rec(n.getChild2())\n\t\t\t\t\t: null\n\t\t\t);\n\n\t\t\tlet fromVariableMarker: string | JSX.Element = '';\n\t\t\tif (n.hasMetaData('fromVariable')) {\n\t\t\t\tconst variableName = n.getMetaData('fromVariable')!;\n\t\t\t\tif (usedVariableNames.has(variableName) === false) {\n\t\t\t\t\tusedVariableNames.set(variableName, usedVariables++);\n\t\t\t\t}\n\n\t\t\t\tconst num = usedVariableNames.get(variableName)! % numColors;\n\t\t\t\tfromVariableMarker = <span> <span className={`label label-info label-info-${num}`}>{variableName} =</span> </span>;\n\t\t\t}\n\n\n\t\t\t// create popover\n\t\t\tconst popoverBody = () => {\n\t\t\t\tn.check();\n\t\t\t\tn.getResult();\n\n\t\t\t\tconst schema = n.getSchema();\n\t\t\t\tconst numRows = n.getResultNumRows();\n\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\tcolumns:\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{schema.getColumns().map((col, i) => (\n\t\t\t\t\t\t\t\t<li key={i}>{col.toString()} <small className=\"muted text-muted\">{schema.getType(i)}</small></li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t{(n.hasMetaData('naturalJoinConditions'))\n\t\t\t\t\t\t\t? (\n\t\t\t\t\t\t\t\t<div>natural join conditions:\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t{n.getMetaData('naturalJoinConditions')!.map(condition => (\n\t\t\t\t\t\t\t\t\t\t\t<li dangerouslySetInnerHTML={{ __html: condition.getFormulaHtml() }}></li>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t<p>{`${numRows} row${numRows === 1 ? '' : 's'}`}</p>\n\n\t\t\t\t\t\t{n.getMetaData('isInlineRelation') === true && n.hasMetaData('inlineRelationDefinition')\n\t\t\t\t\t\t\t? <pre>{n.getMetaData('inlineRelationDefinition')}</pre>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tn._execTime ? <p>{t('calc.result.exec.time')} {n._execTime}ms</p> : <p>{t('calc.result.exec.time')} - ms</p>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t};\n\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t'node': true,\n\t\t\t\t\t\t\t'active': n === activeNode,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tonClick={() => setActiveNode && setActiveNode(n)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\ttitle={<div>{fromVariableMarker}<div dangerouslySetInnerHTML={{ __html: n.getFormulaHtml(true, false) }}></div></div>}\n\t\t\t\t\t\t\tbody={popoverBody}\n\t\t\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\t\t\ttrigger=\"hover\"\n\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t<a className=\"formula\">\n\t\t\t\t\t\t\t\t{fromVariableMarker}<span dangerouslySetInnerHTML={{ __html: n.getFormulaHtml(false, false) }} /><br/>\n\t\t\t\t\t\t\t\t<span className=\"resultCountLabel\">{`${n.getResultNumRows()} row${n.getResultNumRows() === 1 ? '' : 's'}`}</span>\n\t\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t</Popover>\n\t\t\t\t\t</div>\n\t\t\t\t\t{child || child2\n\t\t\t\t\t\t? (\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{child}\n\t\t\t\t\t\t\t\t{child2}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</li>\n\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ra-tree\">\n\t\t\t\t<div className=\"tree\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{rec(root)}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/calc2/components/raTree.tsx b/src/calc2/components/raTree.tsx
--- a/src/calc2/components/raTree.tsx	(revision 4f7a49d26cbfb91e8bd45ceabbed8858a222d0b0)
+++ b/src/calc2/components/raTree.tsx	(date 1664537543897)
@@ -99,7 +99,8 @@
 							: null
 						}
 						{
-							n._execTime ? <p>{t('calc.result.exec.time')} {n._execTime}ms</p> : <p>{t('calc.result.exec.time')} - ms</p>
+							// TODO: show 0 
+							n._execTime ? <p>{t('calc.result.exec.time')} {n._execTime }ms</p> : <p>{t('calc.result.exec.time')}- ms</p>
 						}
 						
 						
