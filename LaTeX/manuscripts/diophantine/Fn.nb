(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    107311,       2749]
NotebookOptionsPosition[    100364,       2518]
NotebookOutlinePosition[    100719,       2534]
CellTagsIndexPosition[    100676,       2531]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"x_", ",", "n_"}], "]"}], "=", 
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"k", "*", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.696354567417994*^9, 3.6963545791494703`*^9}, 
   3.696357319952528*^9}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Product]", 
   RowBox[{"k", "=", "1"}], "n"], 
  RowBox[{"Sin", "[", 
   RowBox[{"k", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.69635732036378*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"x", ",", "10"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6963545844299088`*^9, 3.6963546277970877`*^9}, {
  3.69635495353017*^9, 3.696354956552548*^9}, {3.696355628986569*^9, 
  3.6963556293550873`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
oebf/bzw8NrHkMiqDfH/AVjK70Q=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6963545940359583`*^9, 3.696354628050671*^9}, {
   3.6963549538990793`*^9, 3.696354956963463*^9}, 3.696355460862166*^9, 
   3.696355629732087*^9, 3.696356936780233*^9, 3.696357323059031*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "1"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.6963581988649273`*^9, {3.696358421783071*^9, 3.696358426348831*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "6.313129046222584`*^-9"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696358203305314*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696358208193719*^9, 3.69635820865525*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.257078722109418`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.4908826744562421`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.696358213715859*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696358216979498*^9, 3.6963582170445833`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.9999999999999998`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.5707963234550173`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.696358222696763*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696358229933864*^9, 3.696358229996942*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.0835318424563343`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.086826225855956`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.6963582339586153`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696358238993339*^9, 3.6963582390530043`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.5304490204243655`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.8124668683918352`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.6963582422762127`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6963582476990633`*^9, 3.6963582477787247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.5400256959121699`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.2719731141114614`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.696358251335123*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "7"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6963582580745907`*^9, 3.69635825839051*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.0186717570061359`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.2344813770805971`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.696358263489613*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "8"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696358268533394*^9, 3.696358268776175*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8534893092004042`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.636148485958722`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.696358272371686*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "9"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696358277644418*^9, 3.696358277877078*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5381309205712481`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.5353370153208791`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.696358282159705*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6963554413664083`*^9, 3.696355444035643*^9}, 
   3.6963555661249332`*^9, {3.696355644990548*^9, 3.696355685307179*^9}, {
   3.696356255900494*^9, 3.696356337908916*^9}, {3.696356955278739*^9, 
   3.6963569751974707`*^9}, {3.696357101292006*^9, 3.696357109198264*^9}, {
   3.6963575004723988`*^9, 3.696357506621584*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6963569990812597`*^9, 3.696357020656802*^9}, {
  3.696357519707685*^9, 3.696357564463997*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.4002820969966824`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.19043957634648695`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6963570146690187`*^9, 3.69635702115893*^9}, {
  3.696357520101351*^9, 3.696357565815379*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "11"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6963575712808323`*^9, 3.6963575714369917`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.696357582545507*^9, 3.696357586579069*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.2930331274171574`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.17605373251582282`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6963575761167088`*^9, 3.6963575872434464`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "12"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357594090789*^9, 3.696357594175275*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.17391608071143844`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.6993398398520696`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.696357597451405*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "13"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6963576012774687`*^9, 3.6963576014323893`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.15043096187526853`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.15297311857797294`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696357605957934*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "14"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357610112114*^9, 3.696357610880294*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.10592396885742734`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.14357678020663248`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696357614752672*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "15"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357624825405*^9, 3.696357624995963*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.07387709757437771`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.13527686024090527`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6963576272790203`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "16"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357638172085*^9, 3.696357638547196*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.05109731699884372`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.12789204476400765`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696357642547414*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "17"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6963576469954853`*^9, 3.696357647301174*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.01191113503663902`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.3991731737783717`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.6963576521489277`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "18"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6963576559926167`*^9, 3.696357656210092*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.023928688144272018`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.11532200831649982`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696357660955443*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "19"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.69635766317389*^9, 3.69635766328473*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.016225709318418175`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.10992839910945552`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696357667665208*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "20"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357669950556*^9, 3.696357670289485*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.010944387038254979`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.10502151969890042`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6963576738949547`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "21"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357719920105*^9, 3.696357720048386*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{3.6963577266025743`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0073468294784134235`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.10053816040846074`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6963577229076357`*^9, 3.696357729067524*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "22"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.69635773423006*^9, 3.696357734373048*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.004910407173174931`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.09642560280301983`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696357739066578*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "23"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357742610602*^9, 3.696357743423263*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.003268947182407089`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.09263953307067561`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696357749587338*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "24"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6963577519566402`*^9, 3.696357752119451*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0021682761371529004`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.08914243190682102`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.69635775875627*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "25"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357761144895*^9, 3.6963577613327103`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0014333883172937744`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.08590232184459608`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6963577682389183`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "26"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357770592731*^9, 3.696357771168138*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000944642527302181`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.08289178064633021`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696357778545507*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "27"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6963577809628897`*^9, 3.696357781240616*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0006207616710087517`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.08008715804546102`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696357789843047*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "28"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357792500038*^9, 3.696357792663652*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0004068411296780474`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.07746794882148703`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696357801761332*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "29"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357803999607*^9, 3.696357804120982*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00026597878798647603`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.07501628427757787`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6963578160951567`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "30"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6963578292463284`*^9, 3.696357829871114*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0001734854444473261`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.07271652308672066`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.696357840003811*^9, 3.696357846608171*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "31"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357844278028*^9, 3.696357845387177*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00011291138911692114`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.07055494195037516`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6963578555560226`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "32"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357858929347*^9, 3.6963578590855722`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00007333813244529609`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.06851936727217281`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696357874725164*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "33"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6963578774963713`*^9, 3.696357877619129*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00004754367277856014`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.06659906563715538`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696357893011279*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "34"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357895649763*^9, 3.6963578957973757`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000030766287416396614`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.06478448270555072`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.69635790901499*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "35"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357919426556*^9, 3.6963579200028563`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00001987565608235858`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.06306708439524832`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696357935674838*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "36"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6963579382689*^9, 3.696357938606184*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00001281954761161731`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.06143923571022571`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6963579548693857`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "37"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357957545195*^9, 3.696357957778761*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.813430588265238`*^-7", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.14352610064037644`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6963579741633167`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "38"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696357977107534*^9, 3.696357977268689*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.309294783949123`*^-6", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.058425455882895355`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696357994923273*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "39"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.69635799823713*^9, 3.696357998338282*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.4097005328784832`*^-6", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.057027792845278084`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6963580142291393`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "40"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696358017196138*^9, 3.696358017971882*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.1869256577527865`*^-6", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.055696027598114935`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696358035495015*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "41"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696358044449234*^9, 3.696358044684257*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.400933614042318`*^-6", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.05442561255416413`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696358063587079*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"k", "*", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "42"}], "}"}]}], "]"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696358066269813*^9, 3.696358067729259*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"G", "[", "x", "]"}], ",", 
     RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8.963802170820611`*^-7", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.05321237779573445`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696358088077737*^9}]
}, Open  ]]
},
WindowSize->{740, 675},
WindowMargins->{{59, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 374, 11, 28, "Input"],
Cell[956, 35, 206, 6, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1199, 46, 440, 11, 28, "Input"],
Cell[1642, 59, 59208, 976, 229, "Output"]
}, Open  ]],
Cell[60865, 1038, 444, 14, 28, "Input"],
Cell[CellGroupData[{
Cell[61334, 1056, 251, 7, 28, "Input"],
Cell[61588, 1065, 196, 6, 35, "Output"]
}, Open  ]],
Cell[61799, 1074, 416, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[62240, 1091, 251, 7, 28, "Input"],
Cell[62494, 1100, 207, 6, 28, "Output"]
}, Open  ]],
Cell[62716, 1109, 419, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[63160, 1126, 251, 7, 28, "Input"],
Cell[63414, 1135, 208, 6, 28, "Output"]
}, Open  ]],
Cell[63637, 1144, 417, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[64079, 1161, 251, 7, 28, "Input"],
Cell[64333, 1170, 209, 6, 28, "Output"]
}, Open  ]],
Cell[64557, 1179, 419, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[65001, 1196, 251, 7, 28, "Input"],
Cell[65255, 1205, 210, 6, 28, "Output"]
}, Open  ]],
Cell[65480, 1214, 421, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[65926, 1231, 251, 7, 28, "Input"],
Cell[66180, 1240, 208, 6, 28, "Output"]
}, Open  ]],
Cell[66403, 1249, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[66846, 1266, 251, 7, 28, "Input"],
Cell[67100, 1275, 208, 6, 28, "Output"]
}, Open  ]],
Cell[67323, 1284, 417, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[67765, 1301, 251, 7, 28, "Input"],
Cell[68019, 1310, 207, 6, 28, "Output"]
}, Open  ]],
Cell[68241, 1319, 417, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[68683, 1336, 251, 7, 28, "Input"],
Cell[68937, 1345, 208, 6, 28, "Output"]
}, Open  ]],
Cell[69160, 1354, 694, 17, 28, "Input"],
Cell[CellGroupData[{
Cell[69879, 1375, 368, 9, 28, "Input"],
Cell[70250, 1386, 284, 7, 28, "Output"]
}, Open  ]],
Cell[70549, 1396, 422, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[70996, 1413, 317, 8, 28, "Input"],
Cell[71316, 1423, 238, 6, 28, "Output"]
}, Open  ]],
Cell[71569, 1432, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[72012, 1449, 251, 7, 28, "Input"],
Cell[72266, 1458, 209, 6, 28, "Output"]
}, Open  ]],
Cell[72490, 1467, 422, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[72937, 1484, 251, 7, 28, "Input"],
Cell[73191, 1493, 211, 6, 28, "Output"]
}, Open  ]],
Cell[73417, 1502, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[73860, 1519, 251, 7, 28, "Input"],
Cell[74114, 1528, 211, 6, 28, "Output"]
}, Open  ]],
Cell[74340, 1537, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[74783, 1554, 251, 7, 28, "Input"],
Cell[75037, 1563, 213, 6, 28, "Output"]
}, Open  ]],
Cell[75265, 1572, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[75708, 1589, 251, 7, 28, "Input"],
Cell[75962, 1598, 211, 6, 28, "Output"]
}, Open  ]],
Cell[76188, 1607, 420, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[76633, 1624, 251, 7, 28, "Input"],
Cell[76887, 1633, 211, 6, 28, "Output"]
}, Open  ]],
Cell[77113, 1642, 420, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[77558, 1659, 251, 7, 28, "Input"],
Cell[77812, 1668, 212, 6, 28, "Output"]
}, Open  ]],
Cell[78039, 1677, 416, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[78480, 1694, 251, 7, 28, "Input"],
Cell[78734, 1703, 212, 6, 28, "Output"]
}, Open  ]],
Cell[78961, 1712, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[79404, 1729, 251, 7, 28, "Input"],
Cell[79658, 1738, 214, 6, 28, "Output"]
}, Open  ]],
Cell[79887, 1747, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[80330, 1764, 295, 8, 28, "Input"],
Cell[80628, 1774, 239, 6, 28, "Output"]
}, Open  ]],
Cell[80882, 1783, 417, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[81324, 1800, 251, 7, 28, "Input"],
Cell[81578, 1809, 212, 6, 28, "Output"]
}, Open  ]],
Cell[81805, 1818, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[82248, 1835, 251, 7, 28, "Input"],
Cell[82502, 1844, 212, 6, 28, "Output"]
}, Open  ]],
Cell[82729, 1853, 420, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[83174, 1870, 251, 7, 28, "Input"],
Cell[83428, 1879, 212, 6, 28, "Output"]
}, Open  ]],
Cell[83655, 1888, 420, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[84100, 1905, 251, 7, 28, "Input"],
Cell[84354, 1914, 215, 6, 28, "Output"]
}, Open  ]],
Cell[84584, 1923, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[85027, 1940, 251, 7, 28, "Input"],
Cell[85281, 1949, 212, 6, 28, "Output"]
}, Open  ]],
Cell[85508, 1958, 420, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[85953, 1975, 251, 7, 28, "Input"],
Cell[86207, 1984, 213, 6, 28, "Output"]
}, Open  ]],
Cell[86435, 1993, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[86878, 2010, 251, 7, 28, "Input"],
Cell[87132, 2019, 213, 6, 28, "Output"]
}, Open  ]],
Cell[87360, 2028, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[87803, 2045, 251, 7, 28, "Input"],
Cell[88057, 2054, 216, 6, 28, "Output"]
}, Open  ]],
Cell[88288, 2063, 420, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[88733, 2080, 251, 7, 28, "Input"],
Cell[88987, 2089, 237, 6, 28, "Output"]
}, Open  ]],
Cell[89239, 2098, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[89682, 2115, 251, 7, 28, "Input"],
Cell[89936, 2124, 216, 6, 28, "Output"]
}, Open  ]],
Cell[90167, 2133, 420, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[90612, 2150, 251, 7, 28, "Input"],
Cell[90866, 2159, 214, 6, 28, "Output"]
}, Open  ]],
Cell[91095, 2168, 420, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[91540, 2185, 251, 7, 28, "Input"],
Cell[91794, 2194, 214, 6, 28, "Output"]
}, Open  ]],
Cell[92023, 2203, 420, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[92468, 2220, 251, 7, 28, "Input"],
Cell[92722, 2229, 214, 6, 28, "Output"]
}, Open  ]],
Cell[92951, 2238, 420, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[93396, 2255, 251, 7, 28, "Input"],
Cell[93650, 2264, 214, 6, 28, "Output"]
}, Open  ]],
Cell[93879, 2273, 416, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[94320, 2290, 251, 7, 28, "Input"],
Cell[94574, 2299, 216, 6, 28, "Output"]
}, Open  ]],
Cell[94805, 2308, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[95248, 2325, 251, 7, 28, "Input"],
Cell[95502, 2334, 215, 6, 35, "Output"]
}, Open  ]],
Cell[95732, 2343, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[96175, 2360, 251, 7, 28, "Input"],
Cell[96429, 2369, 214, 6, 35, "Output"]
}, Open  ]],
Cell[96658, 2378, 417, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[97100, 2395, 251, 7, 28, "Input"],
Cell[97354, 2404, 217, 6, 35, "Output"]
}, Open  ]],
Cell[97586, 2413, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[98029, 2430, 251, 7, 28, "Input"],
Cell[98283, 2439, 215, 6, 35, "Output"]
}, Open  ]],
Cell[98513, 2448, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[98956, 2465, 251, 7, 28, "Input"],
Cell[99210, 2474, 213, 6, 35, "Output"]
}, Open  ]],
Cell[99438, 2483, 418, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[99881, 2500, 251, 7, 28, "Input"],
Cell[100135, 2509, 213, 6, 35, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
